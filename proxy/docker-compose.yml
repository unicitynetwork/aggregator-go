services:
  haproxy:
    image: haproxy:2.8
    container_name: proxy-haproxy
    network_mode: "host"
    restart: unless-stopped
    user: root
    depends_on:
      certbot:
        condition: service_healthy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - letsencrypt_certs:/etc/letsencrypt:ro

  certbot:
    image: certbot/certbot
    container_name: proxy-certbot
    restart: unless-stopped
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "test -f /etc/letsencrypt/live/goggregator-test.unicity.network/haproxy.pem"]
      interval: 5s
      timeout: 5s
      retries: 5
    entrypoint: >
      sh -c "
        # Install dependencies and define variables with correct quoting
        apk add --no-cache docker-cli;
        DOMAIN=\"goggregator-test.unicity.network\";
        LE_PATH=\"/etc/letsencrypt/live/$$DOMAIN\";

        # Run the initial setup
        echo 'Preparing certificates and permissions for HAProxy...';
        cat \"$$LE_PATH/privkey.pem\" \"$$LE_PATH/fullchain.pem\" > \"$$LE_PATH/haproxy.pem\";
        chmod -R 755 /etc/letsencrypt/live;
        chmod -R 755 /etc/letsencrypt/archive;
        echo 'Initial setup complete. Service is now healthy.';

        # Loop for renewals
        while :; do
          echo 'Running renewal check...';
          # === THIS IS THE KEY FIX: The entire certbot command is on ONE line ===
          certbot renew --standalone --pre-hook 'docker stop proxy-haproxy' --post-hook 'docker start proxy-haproxy' --deploy-hook \"echo 'Certificate renewed, fixing permissions...'; cat $$LE_PATH/privkey.pem $$LE_PATH/fullchain.pem > $$LE_PATH/haproxy.pem; chmod -R 755 /etc/letsencrypt/live; chmod -R 755 /etc/letsencrypt/archive;\";
          sleep 12h & wait $${!};
        done;
      "

volumes:
  letsencrypt_certs:
