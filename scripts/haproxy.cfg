global
    log stdout local0
    maxconn 4000
    daemon

# Docker DNS resolver for dynamic service discovery
resolvers docker_resolver
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry 1s
    hold valid 10s
    hold obsolete 30s

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

# Stats interface
stats enable
stats uri /haproxy-stats
stats refresh 30s
stats show-node

# Health check endpoint for HAProxy itself
frontend health_check
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats show-legends
    stats show-desc HAProxy load balancer for Aggregator services

# Main frontend for aggregator services
frontend aggregator_frontend
    bind *:3000
    # Add request ID for tracking
    unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
    unique-id-header X-Request-ID

    # Capture request and response for logging
    capture request header User-Agent len 128
    capture request header Content-Type len 64

    # Route to backend
    default_backend aggregator_backend

# Backend configuration for aggregator services
backend aggregator_backend
    # Load balancing algorithm
    balance roundrobin

    # Sticky sessions based on source IP (optional, can be removed for pure round-robin)
    # stick-table type ip size 100k expire 30m
    # stick on src

    # Health check configuration
    option httpchk GET /health
    http-check expect status 200

    # Cleanup connections when backend is marked down
    option redispatch
    option abortonclose

    # Backend servers with improved health check parameters
    # inter 2s = check every 2 seconds (faster detection)
    # fastinter 1s = check every 1 second when backend is transitioning
    # downinter 5s = check every 5 seconds when backend is down
    # fall 2 = mark DOWN after 2 failed checks (4 seconds)
    # rise 2 = mark UP after 2 successful checks (2-4 seconds)
    # on-marked-down shutdown-sessions = close existing sessions when backend fails
    # resolvers = use Docker DNS resolver for dynamic IP resolution
    # init-addr = initialization strategy (last known IP, then DNS, then accept none)
    server aggregator1 aggregator-1:3001 check inter 2s fastinter 1s downinter 5s fall 2 rise 2 on-marked-down shutdown-sessions weight 100 resolvers docker_resolver init-addr last,libc,none
    server aggregator2 aggregator-2:3002 check inter 2s fastinter 1s downinter 5s fall 2 rise 2 on-marked-down shutdown-sessions weight 100 resolvers docker_resolver init-addr last,libc,none

    # Add response headers for debugging
    http-response set-header X-Backend-Server %s
    http-response set-header X-HAProxy-Server-ID %si
